plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.leir4iks.wireguard'
version = '3.0.0'

repositories {
    mavenCentral()
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://nexus.velocitypowered.com/repository/maven-public/' }
}

dependencies {
    // Bukkit API
    compileOnly 'org.bukkit:bukkit:1.20.1-R0.1-SNAPSHOT'
    
    // Velocity API
    compileOnly 'com.velocitypowered:velocity-api:3.2.0-SNAPSHOT'
    annotationProcessor 'com.velocitypowered:velocity-api:3.2.0-SNAPSHOT'
    
    // WireGuard Android tunnel library (работает и на сервере)
    implementation 'com.wireguard.android:tunnel:1.0.20230427'
    
    // Curve25519 для ключей
    implementation 'org.whispersystems:curve25519-java:0.5.0'
    
    // Netty для высокопроизводительной сети
    implementation 'io.netty:netty-all:4.1.100.Final'
    
    // JSON для конфигураций
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Логирование
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    
    // Криптография
    implementation 'org.bouncycastle:bcprov-jdk18on:1.76'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.76'
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

tasks {
    build {
        dependsOn shadowJar
    }
    
    shadowJar {
        archiveClassifier.set('')
        mergeServiceFiles()
        
        relocate 'io.netty', 'com.leir4iks.wireguard.relocated.netty'
        relocate 'org.whispersystems', 'com.leir4iks.wireguard.relocated.whispersystems'
        relocate 'org.bouncycastle', 'com.leir4iks.wireguard.relocated.bouncycastle'
        relocate 'com.google.gson', 'com.leir4iks.wireguard.relocated.gson'
        
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA' 
        exclude 'META-INF/*.RSA'
    }
    
    processResources {
        filesMatching(['plugin.yml', 'velocity-plugin.json']) {
            expand project.properties
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
}
